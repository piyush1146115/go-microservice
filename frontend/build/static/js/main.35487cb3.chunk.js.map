{"version":3,"sources":["CoffeeList.js","Toast.js","Admin.js","App.js","serviceWorker.js","index.js"],"names":["CoffeeList","props","readData","state","products","bind","self","this","axios","get","window","global","api_location","then","response","console","log","data","setState","catch","error","table","i","length","push","key","name","price","sku","style","marginBottom","Table","getProducts","React","Component","Toaster","show","hide","prevProps","Toast","onClose","delay","autohide","Header","className","Body","message","Admin","validated","id","buttonDisabled","toastShow","toastText","changeHandler","handleSubmit","event","preventDefault","currentTarget","checkValidity","FormData","append","file","post","files_location","_boundary","res","status","statusText","stopPropagation","target","value","files","Container","Form","noValidate","onSubmit","Group","as","Row","controlId","Label","column","sm","Col","Control","type","placeholder","required","width","onChange","Text","Feedback","Button","disabled","App","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","inline","FormControl","variant","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35487cb3.chunk.js","sourcesContent":["import React from 'react';\nimport Table from 'react-bootstrap/Table'\nimport axios from 'axios';\n\nclass CoffeeList extends React.Component {\n\n    readData() {\n        const self = this;\n        axios.get(window.global.api_location+'/products').then(function(response) {\n            console.log(response.data);\n\n            self.setState({products: response.data});\n        }).catch(function (error){\n            console.log(error);\n        });\n    }\n\n    getProducts() {\n        let table = []\n\n        for (let i=0; i < this.state.products.length; i++) {\n\n            table.push(\n            <tr key={i}>\n                <td>{this.state.products[i].name}</td>\n                <td>{this.state.products[i].price}</td>\n                <td>{this.state.products[i].sku}</td>\n            </tr>\n            );\n        }\n\n        return table\n    }\n\n    constructor(props) {\n        super(props);\n        this.readData();\n        this.state = {products: []};\n    \n        this.readData = this.readData.bind(this);\n    }\n\n    render() {\n      return (\n        <div>\n            <h1 style={{marginBottom: \"40px\"}}>Menu</h1>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                        </th>\n                        <th>\n                            Price\n                        </th>\n                        <th>\n                            SKU\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.getProducts()}\n                </tbody>\n            </Table>\n        </div>\n      ) \n    }\n}\n\nexport default CoffeeList;","import React from 'react';\nimport Toast from 'react-bootstrap/Toast';\n\nclass Toaster extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {show: false};\n        this.hide = this.hide.bind(this);\n    }\n\n    hide(){\n        this.setState({show: false});\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props !== prevProps) {\n            this.setState({show: this.props.show});\n        }\n    }\n\n    render() {\n        return(\n              <Toast onClose={this.hide} show={this.state.show} delay={3000} autohide>\n                <Toast.Header>\n                  <strong className=\"mr-auto\">File Upload</strong>\n                </Toast.Header>\n                <Toast.Body>{this.props.message}</Toast.Body>\n              </Toast>\n        )\n    }\n}\n\nexport default Toaster;","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Toast from './Toast.js'\n\nimport axios from 'axios';\n\n/*\nThis is the react equivilent of the following HTML form\n<form action=\"http://localhost:8000\" method=\"post\" enctype=\"multipart/form-data\">\n  <p><input type=\"text\" name=\"id\" value=\"\">\n  <p><input type=\"file\" name=\"file\">\n  <p><button type=\"submit\">Submit</button>\n</form>\n*/\n\n\nclass Admin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {validated: false, id: \"\", buttonDisabled: false, toastShow: false, toastText: \"asd\"};\n    \n        this.validated = this.validated.bind(this);\n        this.changeHandler = this.changeHandler.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    validated(){\n        console.log(\"validated\", this.state.validated)\n        return this.state.validated;\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if(event.currentTarget.checkValidity() === false) {\n            event.stopPropagation();\n            return;\n        };\n\n        this.setState({buttonDisabled: true, toastShow: false})\n\n        // create the data\n        const data = new FormData()\n        data.append('file', this.state.file);\n        data.append('id', this.state.id);\n\n        // upload the file\n        axios.post(\n            window.global.files_location, \n            data, \n            {'content-type': `multipart/form-data; boundary=${data._boundary}`})\n        .then(res => {\n            console.log(res);\n            var toastText = \"\";\n            if(res.status === 200) {\n                toastText = \"Uploaded file\";\n            } else {\n                toastText = \"Unable to upload file. Error:\" +res.statusText;\n            }\n\n            this.setState({buttonDisabled: false, toastShow: true, toastText: toastText});\n        }).catch(error => {\n            console.log(\"Err\" + error);\n            this.setState({buttonDisabled: false, toastShow: true, toastText: \"Unable to upload file. \" + error});\n        });\n    }\n\n    changeHandler(event) {\n        if(event.target.name === \"file\"){\n            this.setState({ [event.target.name]: event.target.files[0], toastShow: false});\n            return\n        }\n\n        this.setState({ [event.target.name]: event.target.value, toastShow: false});\n    }\n\n    render() {\n      return (\n          <div>\n          <h1 style={{marginBottom: \"40px\"}}>Admin</h1>\n          <Container className=\"text-left\">\n            <Form noValidate validated={this.validated} onSubmit={this.handleSubmit}>\n                  <Form.Group as={Row} controlId=\"productID\">\n                      <Form.Label column sm=\"2\">Product ID:</Form.Label>\n                      <Col sm=\"6\">\n                          <Form.Control type=\"text\" name=\"id\" placeholder=\"\" required style={{width: \"80px\"}} value={this.state.id} onChange={this.changeHandler}/>\n                          <Form.Text className=\"text-muted\">Enter the product id to upload an image for</Form.Text>\n                          <Form.Control.Feedback type=\"invalid\">Please provide a product ID.</Form.Control.Feedback>\n                      </Col>\n                  <Col sm=\"4\">\n                      <Toast show={this.state.toastShow} message={this.state.toastText}/>\n                  </Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                      <Form.Label column sm=\"2\">File:</Form.Label>\n                      <Col sm=\"10\">\n                          <Form.Control type=\"file\" name=\"file\" placeholder=\"\" required onChange={this.changeHandler}/>\n                          <Form.Text className=\"text-muted\">Image to associate with the product</Form.Text>\n                          <Form.Control.Feedback type=\"invalid\">Please select a file to upload.</Form.Control.Feedback>\n                      </Col>\n                  </Form.Group>\n                  <Button  type=\"submit\" disabled={this.state.buttonDisabled}>Submit form</Button>\n            </Form>\n          </Container>\n          </div>\n      )\n    }\n}\n\nexport default Admin;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nimport './App.css';\n\nimport CoffeeList from './CoffeeList.js'\nimport Admin from './Admin.js'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n      <Router>\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">Coffee Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/admin\">Admin</Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n        <Switch>\n          <Route path=\"/admin\">\n            <Admin/>\n          </Route>\n          <Route path=\"/\">\n            <CoffeeList/>\n          </Route>\n          <Route>\n            <CoffeeList/>\n          </Route>\n        </Switch>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}